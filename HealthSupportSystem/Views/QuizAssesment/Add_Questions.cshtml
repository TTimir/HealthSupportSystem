@model DatabaseLayer.quiz_Questions

@{
    ViewBag.Title = "Add_Questions";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Success!</strong> TempData["Message"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-3 pt-3">
        <div class="col-12">
            <div class="bg-secondary opacity-75 bg-gradient p-3 text-center mb-2 text-white fw-bolder fs-3">
                Add Questions
            </div>
            <hr>
        </div>
        <hr />
        <div class="row g-3">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group col-12">
                @Html.LabelFor(model => model.q_fk_Cat_id, "Select Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.DropDownList("q_fk_cat_id", ViewBag.list as SelectList, "--Select--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.q_fk_Cat_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-10">
                @Html.LabelFor(model => model.q_text, "Question", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.q_text, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your question here" } })
                    @Html.ValidationMessageFor(model => model.q_text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.QA, "Option A", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.QA, new { htmlAttributes = new { @class = "form-control", placeholder = "A: " } })
                    @Html.ValidationMessageFor(model => model.QA, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.QB, "Option B", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.QB, new { htmlAttributes = new { @class = "form-control", placeholder = "B: " } })
                    @Html.ValidationMessageFor(model => model.QB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.QC, "Option C", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.QC, new { htmlAttributes = new { @class = "form-control", placeholder = "C: " } })
                    @Html.ValidationMessageFor(model => model.QC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.QD, "Option D", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.QD, new { htmlAttributes = new { @class = "form-control", placeholder = "D: " } })
                    @Html.ValidationMessageFor(model => model.QD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-12">
                @Html.LabelFor(model => model.QCorrectAns, "Correct Option", htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.QCorrectAns, new { htmlAttributes = new { @class = "form-control", placeholder = "A" } })
                    @Html.ValidationMessageFor(model => model.QCorrectAns, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="genric-btn primary" />
                </div>
            </div>
        </div>
    </div>
}

